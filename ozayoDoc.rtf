{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 TimesNewRomanPSMT;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red34\green34\blue34;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ul \ulc0 Manual Testing Bug Reports:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone  \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Title:\ulnone  URL Validator does not validate the world wide web part.\
\
\ul Class:\ulnone  \'93Logic Error\'94\
\
Date: 3/8/16\
Platform: Eclipse\
Browser: Chrome and Mozilla\
\
\ul Description:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone The URL validator does not check the www part in the URL\'92s host name. The program should return true when the URL has three w\'92 in its host name. Otherwise it should return false. However, the validator does not check the number of w\'92s in the host name. Using only one w in the host name returns true which should return false. \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Expected Results\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone When we check the following URL 
\f1\fs20 http://w.nytimes.com/
\f2\fs24  manually in the URL Validator, the program should return false.\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Actual Results\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone Using the 
\f1\fs20 http://w.nytimes.com/
\f2\fs24  URL address returned True which should return false. \
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Workarounds\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone Add a new function to the program that checks the number of w\'92s in the host name as well as the w, as this program returned True with three A\'92s in place of the W\'92s. \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Title:\ulnone  URL Validator does not validate the word `http` part.\
\
\ul Class:\ulnone  \'93Logic Error\'94\
\
Date: 3/8/16\
Platform: Eclipse\
Browser: Chrome and Mozilla\
\
\ul Description:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone The URL validator does not check the http part in the URL. The program should return true when the URL has `http` or `https` in its URL. Otherwise it should return false. However, the validator does not check the http part in the URL. Anything we replace http part returned true.\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Expected Results\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone When we manually check the following URL 
\f1\fs20 `tttt://www.oregonstate.edu`
\f2\fs24  in the URL Validator, the program should return false.\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Actual Results\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone Using the 
\f1\fs20 tttt://www.oregonstate.edu`
\f2\fs24  URL address returned True which should return false. \
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Workarounds\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone Add a new function to the program that checks http parts in the program. \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Title:\ulnone  IsValidQuery Function returns wrong result.\
\
\ul Class:\ulnone  \'93Logic Error\'94\
\
Date: 3/8/16\
Platform: Eclipse\
Browser: Chrome and Mozilla\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f3 \cf0 Is it reproducible: Yes\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Description:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ulnone The isValidQuery function returns true if the query is null. Otherwise the function returns the \'93
\f1\fs19 \cf2 QUERY_PATTERN.matcher(query).matches();
\f0\fs24 \cf0 \'94 bool value. The exclamation point infront of the return statement makes changes the bool value to its opposite.\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \ul Expected Results\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \ulnone The function returns the following code if the query is not null:\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\fs19 \cf2 Return 
\f3\fs24 \cf0 Query_Pattern.matcher(query).matches()\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Actual Results\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \ulnone The function returns the following code:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf2 !QUERY_PATTERN.matcher(query).matches();\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0 \cf0 \ul Workarounds\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f3 \cf0 \ulnone Take out the exclamation point in the second return statement. \
Return !Query_Pattern.matcher(query).matches() should change to \
Return Query_Pattern.matcher(query).matches()\
\
\
Attachments\
 -----------\
 none\
\
\
\
\
\
}